a) ¿Qué estructura de datos se usa para este índice?
-Map "Chaining"/tabla de hash
b) ¿Cuántos elementos se espera almacenar inicialmente?
-Se espera almacenar 800 elementos 
c) ¿Cuál es el factor de carga máximo?
-El factor de carga maximo es 4.0



a) ¿Qué hace la instrucción “mp.put(...)”?
-La instruccion mp.put ingresa una pareja llave,valor a la tabla de hash. Si la llave ya existe en la tabla, se reemplaza el valor. Asi pues, en la linea de codigo
mp.put(catalog['bookIds'], book['goodreads_book_id'], book), estaria adicionando al mapa catalog['bookIds'] el nuevo libro usando como llave el ID. 
b) ¿Qué papel cumple “book[‘goodreads_book_id’]” en esa instrucción?
-book[‘goodreads_book_id’] al ser la llave de la pareja asociada llave-valor que recibe la funcion mp.put,  esta permite que se busque en el nuevo libro su respectivo ID y asi ser almacenado en el map usando ese ID como su llave. 
Pues, en el archivo csv,el ID se consigue haciendo referencia a ‘goodreads_book_id’
c) ¿Qué papel cumple el tercer parámetro “book” en esa instrucción?
-El tercer parametro 'book' es el valor asociado a la pareja llave-valor


a) ¿Qué hace la instrucción “mp.get(…)”?
- La instruccion mp.get() nos retorna la pareja llave, valor, cuya llave sea igual a key. En este caso year = mp.get(catalog['years'], year), nos retornaria todo el contenido que encuentre asociado a la llave year en el map catalog['years'].
b) ¿Qué papel cumple “year” en esa instrucción?
- Year, ademas de ser un numero que entra por parametro, vendria siendo la llave que el map buscaria en catalog['years'] para asi retornar la pareja completa llave-valor.
c) ¿Qué hace la instrucción “me.getValue(…)”?
-Retorna el valor de una pareja de un Map.